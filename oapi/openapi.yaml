openapi: 3.1.3
info:
  title: Smart Article Analyzer
  description: Text Analysis Application
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
paths:
  /article/{url}:
    get:
      summary: Request to get article content
      operationId: article
      parameters:
        - name: url
          in: path
          description: URL of the article
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Content"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /analyze:
    post:
      summary: Request to analyze text
      operationId: analyze
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Content"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analysis"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
      required:
        - message
    Content:
      type: object
      properties:
        text:
          type: string
          example: "Text here"
      required:
        - text
    Analysis:
      type: object
      properties:
        text:
          type: string
          example: "Summary here"
        keywords:
          type: array
          items:
            type: string
            example: "keyword"
        polarity:
          type: boolean
          example: 2.5
      required:
        - text
        - keywords
        - polarity